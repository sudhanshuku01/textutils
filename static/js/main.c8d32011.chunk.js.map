{"version":3,"sources":["component/Textform.js","component/Alert.js","component/Navbar.js","App.js","reportWebVitals.js","index.js"],"names":["Textform","props","alltext","document","getElementById","_useState","useState","_useState2","_slicedToArray","text","stext","React","createElement","Fragment","className","style","color","mode","heading","rows","value","onChange","e","target","id","backgroundColor","type","onClick","console","log","newtext","toUpperCase","showAlert","toLowerCase","fontFamily","fontStyle","split","join","length","Alert","alert","opacity","concat","word","lower","charAt","slice","capitalize","msg","Navbar","href","title","data-bs-toggle","data-bs-target","aria-controls","aria-expanded","aria-label","aria-current","cursor","togglemode","role","htmlFor","defaultProps","searchname","App","setalert","_useState3","_useState4","setMode","message","setTimeout","body","reportWebVitals","onPerfEntry","Function","__webpack_require__","then","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","render","StrictMode"],"mappings":"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","file":"static/js/main.c8d32011.chunk.js","sourcesContent":["import React, { useState } from 'react'\r\n\r\nexport default function Textform(props){\r\n const handleupclick=()=>{\r\n    console.log('upper case was :-'+ text);\r\n    let newtext=text.toUpperCase();\r\n    stext(newtext);\r\n    props.showAlert(\"Converted to Uppercase\",\"success\");\r\n }\r\n const handleloclick=()=>{\r\n    console.log('lower case was :-'+ text);\r\n    let newtext=text.toLowerCase();\r\n    stext(newtext);\r\n    props.showAlert(\"Converted to Lowercase\",\"success\");\r\n }\r\n const handleonchange=(e)=>{\r\n    stext(e.target.value);\r\n }\r\n const handleClear=()=>{\r\n    stext('')\r\n    props.showAlert(\"Text is Cleared\",\"success\");\r\n   }\r\n\r\nlet alltext=document.getElementById('mybox')\r\n const Italicfont=()=>{\r\n   alltext.style.fontFamily='Sedgwick Ave Display'\r\n   props.showAlert(\"Converted in Italic Text\",\"success\");\r\n }\r\n const normalFont=()=>{\r\n   alltext.style.fontStyle=\"normal\"\r\n   alltext.style.fontFamily=\"Arial, Helvetica, sans-serif\"\r\n   props.showAlert(\"Converted in Normal Text\",\"success\");\r\n }\r\n const removeExtraSpace=()=>{\r\n   let newtext=text.split(/[ ]+/);\r\n  stext(newtext.join(\" \"));\r\n  props.showAlert(\"Extra Space Removed\",\"success\");\r\n }\r\n\r\n const [text,stext]=useState(' ')\r\n    return(\r\n        <>\r\n        <div className=\"container\"  style={{color:props.mode==='dark'?'white':''}} >\r\n        <h3 >{props.heading}</h3>\r\n        <div className=\"mb-3\">\r\n        <textarea rows=\"5\" value={text} onChange={handleonchange} className=\"form-control\" id='mybox'  style={{color:props.mode==='dark'?'white':'',backgroundColor:props.mode==='dark'?'black':'white'}}></textarea>\r\n        <button type=\"submit\" onClick={handleupclick} className=\"btn btn-primary btn-sm my-2\">ConvertToUpperCase</button>\r\n        <button  type=\"submit\" onClick={handleloclick} className=\"btn btn-secondary btn-sm my-2 mx-3\">ConvertLowerCase</button>\r\n        <button  type=\"submit\" onClick={handleClear} className=\"btn btn-warning btn-sm my-2 mx-2\">Clear</button>\r\n        <button  type=\"submit\" onClick={Italicfont} className=\"btn btn-warning btn-sm my-2 mx-2\">Italic Font</button>\r\n        <button  type=\"submit\" onClick={normalFont} className=\"btn btn-warning btn-sm my-2 mx-2\">Normal Font</button>\r\n        <button  type=\"submit\" onClick={removeExtraSpace} className=\"btn btn-warning btn-sm my-2 mx-2\">Extra Space Remove</button>\r\n        </div>\r\n         <div className='container my-2'>\r\n            <h2>Your Text Summary</h2>\r\n            <p>{text.split(' ').length} Words And {text.length} Characters</p>\r\n            <p>{text.length} Minutes Reading Time</p>\r\n            <h3>Preview</h3>\r\n            <p>{text}</p>\r\n         </div>\r\n        </div>\r\n        </>\r\n    )\r\n}","import React from 'react'\r\nexport default function Alert(props){\r\n  const capitalize=(word)=>{\r\n      let lower=word.toLowerCase();\r\n      return lower.charAt(0).toUpperCase()+lower.slice(1);\r\n  }\r\n    return(\r\n      props.alert && <div style={{opacity:1}} className={`alert alert-${props.alert.type}  alert-dismissible fade show\" role=\"alert`}>\r\n        <strong>{capitalize(props.alert.type)} : </strong> {props.alert.msg}\r\n      </div>\r\n    )\r\n}","import React from 'react'\r\nexport default function Navbar(props){\r\n    return (\r\n        <>\r\n        <nav  className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}>\r\n        <div  className=\"container-fluid\">\r\n          <a  className=\"navbar-brand\" href=\"/\" >{props.title}</a>\r\n          <button  className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n            <span  className=\"navbar-toggler-icon\"></span>\r\n          </button>\r\n          <div  className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n            <ul  className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n              <li  className=\"nav-item\">\r\n                <a  className=\"nav-link active\" aria-current=\"page\" href=\"/\" >Home</a>\r\n              </li>\r\n              <li  className=\"nav-item\">\r\n                <a  className=\"nav-link active\" aria-current=\"page\" href=\"/\" >Home</a>\r\n              </li>\r\n            </ul>\r\n          <div className=\"form-check form-switch\" style={{color:props.mode==='dark'?'white':''}}>\r\n           <input style={{cursor:'pointer'}}  onClick={props.togglemode} className=\"form-check-input\" type=\"checkbox\" role=\"switch\" id=\"flexSwitchCheckDefault\"/>\r\n          <label className=\"form-check-label\" htmlFor=\"flexSwitchCheckDefault\">{props.mode} Mode Enabled</label>\r\n          </div>\r\n          </div>\r\n        </div>\r\n      </nav>\r\n          </>\r\n    )\r\n}\r\n// Navbar.propTypes={\r\n//     title:PropTypes.string.isRequired,\r\n//     searchname:PropTypes.isRequired\r\n// // }\r\nNavbar.defaultProps={\r\n    title:'Textutils',\r\n    searchname:'search'\r\n}","// import logo from './logo.svg';\r\n// import './App.css';\r\nimport Textform from './component/Textform';\r\nimport Alert from './component/Alert';\r\n// import DarkMode from './component/DarkMode';\r\nimport Navbar from './component/Navbar';\r\n  // import './TextDesign.css'\r\n//  import TextDesign from \"./component/TextDesign\";\r\nimport React, {useState} from 'react'\r\n\r\nfunction App() {\r\n  const [alert,setalert]=useState(null)\r\n  const [mode,setMode]=useState('light');\r\n  const showAlert=(message,type)=>{\r\n    setalert({\r\n      msg:message,\r\n      type:type            //we'll change it lator\r\n    })\r\n    setTimeout(()=>{\r\n      setalert(null)\r\n    },1500)\r\n  }\r\n  const toggleMode=()=>{\r\n     if(mode==='light'){\r\n      setMode('dark');\r\n      showAlert(\"Dark Mode is Enabled\",\"success\");\r\n      document.body.style.backgroundColor='black';\r\n    }else{\r\n      setMode('light')\r\n      showAlert(\"Light Mode is Enabled\",\"success\");\r\n      document.body.style.backgroundColor='white';\r\n     }\r\n  }\r\n  return( \r\n    <>\r\n    <Navbar showAlert={showAlert} togglemode={toggleMode} mode={mode}/> \r\n    <Alert alert={alert} />\r\n    {/* <div className='container my-3'> */}\r\n    <Textform showAlert={showAlert}  mode={mode}  heading=\"Enter text to convert in Upper Case\"/>\r\n     {/* <DarkMode/> */}\r\n    {/* </div> */}\r\n     {/* <TextDesign/> */}\r\n    </>\r\n  );\r\n}\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}